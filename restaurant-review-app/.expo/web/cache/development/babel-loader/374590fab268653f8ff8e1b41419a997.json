{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/daisuke/Documents/Udemy/React Native \\u5165\\u9580 /restaurant-review-app/src/screens/HomeScreen.jsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { getShops } from \"../lib/firebase\";\nimport { ShopReviewItem } from \"../components/ShopReviewItem\";\nexport var HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      shops = _useState2[0],\n      setShops = _useState2[1];\n\n  useEffect(function () {\n    getFirebaseItems();\n  }, []);\n\n  var getFirebaseItems = function getFirebaseItems() {\n    var shops;\n    return _regeneratorRuntime.async(function getFirebaseItems$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(getShops());\n\n          case 2:\n            shops = _context.sent;\n            setShops(shops);\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onPressShop = function onPressShop(shop) {\n    navigation.navigate('Shop', {\n      shop: shop\n    });\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(FlatList, {\n    data: shops,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(ShopReviewItem, {\n        shop: item,\n        onPress: function onPress() {\n          return onPressShop(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }\n      });\n    },\n    keyExtractor: function keyExtractor(item, index) {\n      return index.toString();\n    },\n    numColumns: 2,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/daisuke/Documents/Udemy/React Native 入門 /restaurant-review-app/src/screens/HomeScreen.jsx"],"names":["StatusBar","React","useEffect","useState","getShops","ShopReviewItem","HomeScreen","navigation","shops","setShops","getFirebaseItems","onPressShop","shop","navigate","styles","container","item","index","toString","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent"],"mappings":";;;;;;AAAA,SAASA,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAEA,SAASC,QAAT;AACA,SAASC,cAAT;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAoB;AAAA,MAAjBC,UAAiB,QAAjBA,UAAiB;;AAAA,kBAChBJ,QAAQ,CAAC,EAAD,CADQ;AAAA;AAAA,MACnCK,KADmC;AAAA,MAC5BC,QAD4B;;AAM1CP,EAAAA,SAAS,CAAC,YAAM;AACZQ,IAAAA,gBAAgB;AACnB,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMA,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACDN,QAAQ,EADP;;AAAA;AACfI,YAAAA,KADe;AAIrBC,YAAAA,QAAQ,CAACD,KAAD,CAAR;;AAJqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAzB;;AAOA,MAAMG,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAU;AAC1BL,IAAAA,UAAU,CAACM,QAAX,CAAoB,MAApB,EAA4B;AAAED,MAAAA,IAAI,EAAJA;AAAF,KAA5B;AACH,GAFD;;AAIA,SACI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEE,MAAM,CAACC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,QAAD;AACI,IAAA,IAAI,EAAEP,KADV;AAGI,IAAA,UAAU,EAAE;AAAA,UAAGQ,IAAH,SAAGA,IAAH;AAAA,aACR,oBAAC,cAAD;AAAgB,QAAA,IAAI,EAAEA,IAAtB;AAA4B,QAAA,OAAO,EAAE;AAAA,iBAAML,WAAW,CAACK,IAAD,CAAjB;AAAA,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADQ;AAAA,KAHhB;AAMI,IAAA,YAAY,EAAE,sBAACA,IAAD,EAAOC,KAAP;AAAA,aAAiBA,KAAK,CAACC,QAAN,EAAjB;AAAA,KANlB;AAOI,IAAA,UAAU,EAAE,CAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAaH,CAlCM;AAoCP,IAAMJ,MAAM,GAAGK,UAAU,CAACC,MAAX,CAAkB;AAC7BL,EAAAA,SAAS,EAAE;AACPM,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE,MAFV;AAGPC,IAAAA,UAAU,EAAE,QAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT;AADkB,CAAlB,CAAf","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport { StyleSheet, SafeAreaView, View, FlatList } from 'react-native';\nimport { getShops } from '../lib/firebase';\nimport { ShopReviewItem } from '../components/ShopReviewItem';\n\nexport const HomeScreen = ({ navigation }) => {\n    const [shops, setShops] = useState([]);\n\n    // The first arugment is called when the second argument is changed.\n    // But since it is an empty array in this case, the first argument\n    // is called only once when the screen is mounted.\n    useEffect(() => {\n        getFirebaseItems();\n    }, []);\n\n    const getFirebaseItems = async () => {\n        const shops = await getShops();\n        // setShops(shops) is called after snapshot is retrieved, because this is an async function.\n        // If this is not were an async function, setShops(shops) is executed while/before snapshot is retrieved\n        setShops(shops);\n    };\n\n    const onPressShop = (shop) => {\n        navigation.navigate('Shop', { shop });\n    };\n\n    return (\n        <SafeAreaView style={styles.container}>\n            <FlatList\n                data={shops}\n                // renderItem is a function\n                renderItem={({ item }) => (\n                    <ShopReviewItem shop={item} onPress={() => onPressShop(item)} />\n                )}\n                keyExtractor={(item, index) => index.toString()}\n                numColumns={2}\n            />\n        </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n});\n"]},"metadata":{},"sourceType":"module"}