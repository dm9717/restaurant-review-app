{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/daisuke/Documents/Udemy/React Native \\u5165\\u9580 /restaurant-review-app/src/screens/CreateReviewScreen.jsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { IconButton } from \"../components/IconButton\";\nimport { TextArea } from \"../components/TextArea\";\nimport { StarInput } from \"../components/StarInput\";\nimport { Button } from \"../components/Button\";\nimport { createReviewRef, uploadImage } from \"../lib/firebase\";\nimport { UserContext } from \"../contexts/userContext\";\nimport firebase, { storage } from 'firebase';\nimport { pickImage } from \"../lib/image-picker\";\nimport { getExtension } from \"../utils/file\";\nimport { Loading } from \"../components/Loading\";\nimport { ReviewsContext } from \"../contexts/reviewsContext\";\nexport var CreateReviewScreen = function CreateReviewScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n  var shop = route.params.shop;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useState3 = useState(3),\n      _useState4 = _slicedToArray(_useState3, 2),\n      score = _useState4[0],\n      setScore = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      imageUri = _useState6[0],\n      setImageUri = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      loading = _useState8[0],\n      setLoading = _useState8[1];\n\n  var _useContext2 = useContext(ReviewsContext),\n      reviews = _useContext2.reviews,\n      setReviews = _useContext2.setReviews;\n\n  useEffect(function () {\n    navigation.setOptions({\n      title: shop.name,\n      headerLeft: function headerLeft() {\n        return React.createElement(IconButton, {\n          name: \"x\",\n          onPress: function onPress() {\n            return navigation.goBack();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 31\n          }\n        });\n      }\n    });\n  }, [shop]);\n\n  var onSubmit = function onSubmit() {\n    var reviewDocRef, ext, storagePath, donwloadUrl, review;\n    return _regeneratorRuntime.async(function onSubmit$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!(!text || !imageUri)) {\n              _context.next = 3;\n              break;\n            }\n\n            Alert.alert(\"The review is empty or you haven't uploaded an image.\");\n            return _context.abrupt(\"return\");\n\n          case 3:\n            setLoading(true);\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(createReviewRef(shop.id));\n\n          case 6:\n            reviewDocRef = _context.sent;\n            ext = getExtension(imageUri);\n            storagePath = \"reviews/\" + reviewDocRef.id + \".\" + ext;\n            _context.next = 11;\n            return _regeneratorRuntime.awrap(uploadImage(imageUri, storagePath));\n\n          case 11:\n            donwloadUrl = _context.sent;\n            review = {\n              id: reviewDocRef.id,\n              user: {\n                name: user.name,\n                id: user.id\n              },\n              shop: {\n                name: shop.name,\n                id: shop.id\n              },\n              text: text,\n              score: score,\n              imageUrl: donwloadUrl,\n              updatedAt: firebase.firestore.Timestamp.now(),\n              createdAt: firebase.firestore.Timestamp.now()\n            };\n            _context.next = 15;\n            return _regeneratorRuntime.awrap(reviewDocRef.set(review));\n\n          case 15:\n            setReviews([review].concat(_toConsumableArray(reviews)));\n            setLoading(false);\n            navigation.goBack();\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var onPickImage = function onPickImage() {\n    var uri;\n    return _regeneratorRuntime.async(function onPickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(pickImage());\n\n          case 2:\n            uri = _context2.sent;\n            setImageUri(uri);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, React.createElement(StarInput, {\n    score: score,\n    onChangeScore: function onChangeScore(value) {\n      return setScore(value);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }), React.createElement(TextArea, {\n    value: text,\n    onChangeText: function onChangeText(value) {\n      return setText(value);\n    },\n    label: \"Review\",\n    placeholder: \"Write a review\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.photoContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, React.createElement(IconButton, {\n    name: \"camera\",\n    onPress: onPickImage,\n    color: \"#ccc\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }), !!imageUri && React.createElement(Image, {\n    source: {\n      uri: imageUri\n    },\n    style: styles.image,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 32\n    }\n  })), React.createElement(Button, {\n    text: \"Post a review\",\n    onPress: onSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }), React.createElement(Loading, {\n    visible: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  photoContainer: {\n    margin: 8\n  },\n  image: {\n    width: 100,\n    height: 100,\n    margin: 8\n  }\n});","map":{"version":3,"sources":["/Users/daisuke/Documents/Udemy/React Native 入門 /restaurant-review-app/src/screens/CreateReviewScreen.jsx"],"names":["React","useEffect","useState","useContext","IconButton","TextArea","StarInput","Button","createReviewRef","uploadImage","UserContext","firebase","storage","pickImage","getExtension","Loading","ReviewsContext","CreateReviewScreen","navigation","route","shop","params","user","text","setText","score","setScore","imageUri","setImageUri","loading","setLoading","reviews","setReviews","setOptions","title","name","headerLeft","goBack","onSubmit","Alert","alert","id","reviewDocRef","ext","storagePath","donwloadUrl","review","imageUrl","updatedAt","firestore","Timestamp","now","createdAt","set","onPickImage","uri","styles","container","value","photoContainer","image","StyleSheet","create","flex","backgroundColor","margin","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport { StyleSheet, SafeAreaView, View, Image, Alert, ScrollView } from 'react-native';\nimport { IconButton } from '../components/IconButton';\nimport { TextArea } from '../components/TextArea';\nimport { StarInput } from '../components/StarInput';\nimport { Button } from '../components/Button';\nimport { createReviewRef, uploadImage } from '../lib/firebase';\nimport { UserContext } from '../contexts/userContext';\nimport firebase, { storage } from 'firebase';\nimport { pickImage } from '../lib/image-picker';\nimport { getExtension } from '../utils/file';\nimport { Loading } from '../components/Loading';\nimport { ReviewsContext } from '../contexts/reviewsContext';\n\nexport const CreateReviewScreen = ({ navigation, route }) => {\n    const { shop } = route.params;\n    const { user } = useContext(UserContext);\n    const [text, setText] = useState('');\n    const [score, setScore] = useState(3);\n    const [imageUri, setImageUri] = useState('');\n    const [loading, setLoading] = useState(false);\n    const { reviews, setReviews } = useContext(ReviewsContext);\n\n    useEffect(() => {\n        navigation.setOptions({\n            title: shop.name,\n            headerLeft: () => <IconButton name=\"x\" onPress={() => navigation.goBack()} />,\n        });\n    }, [shop]);\n\n    const onSubmit = async () => {\n        if (!text || !imageUri) {\n            Alert.alert(\"The review is empty or you haven't uploaded an image.\");\n            return;\n        }\n\n        setLoading(true);\n\n        // Get the ID of the document\n        const reviewDocRef = await createReviewRef(shop.id);\n        // Set the path of an image on Cloud Storage\n        const ext = getExtension(imageUri);\n        const storagePath = `reviews/${reviewDocRef.id}.${ext}`;\n        // Upload the image to Cloud Storage\n        const donwloadUrl = await uploadImage(imageUri, storagePath);\n        // Make a Review document\n\n        const review = {\n            id: reviewDocRef.id,\n            user: {\n                name: user.name,\n                id: user.id,\n            },\n            shop: {\n                name: shop.name,\n                id: shop.id,\n            },\n            text,\n            score,\n            imageUrl: donwloadUrl,\n            updatedAt: firebase.firestore.Timestamp.now(),\n            createdAt: firebase.firestore.Timestamp.now(),\n        };\n        await reviewDocRef.set(review);\n        setReviews([review, ...reviews]);\n        setLoading(false);\n        navigation.goBack();\n    };\n\n    const onPickImage = async () => {\n        const uri = await pickImage();\n        setImageUri(uri);\n    };\n\n    return (\n        <SafeAreaView style={styles.container}>\n            <StarInput score={score} onChangeScore={(value) => setScore(value)} />\n            <TextArea\n                value={text}\n                onChangeText={(value) => setText(value)}\n                label=\"Review\"\n                placeholder=\"Write a review\"\n            />\n            <View style={styles.photoContainer}>\n                <IconButton name=\"camera\" onPress={onPickImage} color=\"#ccc\" />\n                {!!imageUri && <Image source={{ uri: imageUri }} style={styles.image} />}\n            </View>\n            <Button text=\"Post a review\" onPress={onSubmit} />\n            <Loading visible={loading} />\n        </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n    photoContainer: {\n        margin: 8,\n    },\n    image: {\n        width: 100,\n        height: 100,\n        margin: 8,\n    },\n});\n"]},"metadata":{},"sourceType":"module"}