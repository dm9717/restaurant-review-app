{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/daisuke/Documents/Udemy/React Native \\u5165\\u9580 /restaurant-review-app/src/screens/UserScreen.jsx\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { Form } from \"../components/Form\";\nimport { Button } from \"../components/Button\";\nimport { UserContext } from \"../contexts/userContext\";\nimport { updateUser } from \"../lib/firebase\";\nimport firebase from 'firebase';\nimport { Loading } from \"../components/Loading\";\nexport var UserScreen = function UserScreen(_ref) {\n  var navigation = _ref.navigation,\n      route = _ref.route;\n\n  var _useContext = useContext(UserContext),\n      user = _useContext.user,\n      setUser = _useContext.setUser;\n\n  var _useState = useState(user.name),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      loading = _useState4[0],\n      setLoading = _useState4[1];\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, React.createElement(Form, {\n    value: name,\n    onChangeText: function onChangeText(text) {\n      setName(text);\n    },\n    label: 'Name',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    onPress: function _callee() {\n      var updatedAt;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setLoading(true);\n              updatedAt = firebase.firestore.Timestamp.now();\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(updateUser(user.id, {\n                name: name,\n                updatedAt: updatedAt\n              }));\n\n            case 4:\n              setUser(_objectSpread(_objectSpread({}, user), {}, {\n                name: name,\n                updatedAt: updatedAt\n              }));\n              setLoading(false);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    },\n    text: \"Save\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }), React.createElement(Loading, {\n    visible: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }));\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  }\n});","map":{"version":3,"sources":["/Users/daisuke/Documents/Udemy/React Native 入門 /restaurant-review-app/src/screens/UserScreen.jsx"],"names":["React","useState","useContext","Form","Button","UserContext","updateUser","firebase","Loading","UserScreen","navigation","route","user","setUser","name","setName","loading","setLoading","styles","container","text","updatedAt","firestore","Timestamp","now","id","StyleSheet","create","flex","backgroundColor"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;;;;AAEA,SAASC,IAAT;AACA,SAASC,MAAT;AACA,SAASC,WAAT;AACA,SAASC,UAAT;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,OAAT;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA2B;AAAA,MAAxBC,UAAwB,QAAxBA,UAAwB;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAAA,oBACvBT,UAAU,CAACG,WAAD,CADa;AAAA,MACzCO,IADyC,eACzCA,IADyC;AAAA,MACnCC,OADmC,eACnCA,OADmC;;AAAA,kBAEzBZ,QAAQ,CAACW,IAAI,CAACE,IAAN,CAFiB;AAAA;AAAA,MAE1CA,IAF0C;AAAA,MAEpCC,OAFoC;;AAAA,mBAGnBd,QAAQ,CAAC,KAAD,CAHW;AAAA;AAAA,MAG1Ce,OAH0C;AAAA,MAGjCC,UAHiC;;AAKjD,SACI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEC,MAAM,CAACC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAEL,IADX;AAEI,IAAA,YAAY,EAAE,sBAACM,IAAD,EAAU;AACpBL,MAAAA,OAAO,CAACK,IAAD,CAAP;AACH,KAJL;AAKI,IAAA,KAAK,EAAE,MALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAQI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AACLH,cAAAA,UAAU,CAAC,IAAD,CAAV;AACMI,cAAAA,SAFD,GAEad,QAAQ,CAACe,SAAT,CAAmBC,SAAnB,CAA6BC,GAA7B,EAFb;AAAA;AAAA,+CAGClB,UAAU,CAACM,IAAI,CAACa,EAAN,EAAU;AAAEX,gBAAAA,IAAI,EAAEA,IAAR;AAAcO,gBAAAA,SAAS,EAAEA;AAAzB,eAAV,CAHX;;AAAA;AAILR,cAAAA,OAAO,iCAAMD,IAAN;AAAYE,gBAAAA,IAAI,EAAEA,IAAlB;AAAwBO,gBAAAA,SAAS,EAAEA;AAAnC,iBAAP;AACAJ,cAAAA,UAAU,CAAC,KAAD,CAAV;;AALK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADb;AAQI,IAAA,IAAI,EAAC,MART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,EAkBI,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAED,OAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlBJ,CADJ;AAsBH,CA3BM;AA6BP,IAAME,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BR,EAAAA,SAAS,EAAE;AACPS,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,eAAe,EAAE;AAFV;AADkB,CAAlB,CAAf","sourcesContent":["import React, { useState, useContext } from 'react';\nimport { StyleSheet, SafeAreaView, Text } from 'react-native';\nimport { Form } from '../components/Form';\nimport { Button } from '../components/Button';\nimport { UserContext } from '../contexts/userContext';\nimport { updateUser } from '../lib/firebase';\nimport firebase from 'firebase';\nimport { Loading } from '../components/Loading';\n\nexport const UserScreen = ({ navigation, route }) => {\n    const { user, setUser } = useContext(UserContext);\n    const [name, setName] = useState(user.name);\n    const [loading, setLoading] = useState(false);\n\n    return (\n        <SafeAreaView style={styles.container}>\n            <Form\n                value={name}\n                onChangeText={(text) => {\n                    setName(text);\n                }}\n                label={'Name'}\n            />\n            <Button\n                onPress={async () => {\n                    setLoading(true);\n                    const updatedAt = firebase.firestore.Timestamp.now();\n                    await updateUser(user.id, { name: name, updatedAt: updatedAt });\n                    setUser({ ...user, name: name, updatedAt: updatedAt });\n                    setLoading(false);\n                }}\n                text=\"Save\"\n            />\n            <Loading visible={loading} />\n        </SafeAreaView>\n    );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        backgroundColor: '#fff',\n    },\n});\n"]},"metadata":{},"sourceType":"module"}