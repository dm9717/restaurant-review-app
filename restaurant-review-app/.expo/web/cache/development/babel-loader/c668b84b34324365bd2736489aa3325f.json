{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/daisuke/Documents/Udemy/React Native \\u5165\\u9580 /restaurant-review-app/src/components/StarInput.jsx\";\n\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\nexport var StarInput = function StarInput(_ref) {\n  var score = _ref.score,\n      starSize = _ref.starSize,\n      onChangeScore = _ref.onChangeScore;\n  var starStyle = [styles.star, starSize && {\n    fontSize: starSize\n  }];\n  var stars = [1, 2, 3, 4, 5].map(function (starCount) {\n    return React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return onChangeScore(starCount);\n      },\n      key: starCount.toString(),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }\n    }, React.createElement(FontAwesome, {\n      style: starStyle,\n      name: score >= starCount ? 'star' : 'star-o',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }\n    }));\n  });\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }\n  }, stars);\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingVertical: 16,\n    paddingHorizontal: 16\n  },\n  star: {\n    marginRight: 8,\n    fontSize: 24,\n    color: '#900'\n  },\n  scoreText: {\n    fontSize: 14,\n    color: '#000',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["/Users/daisuke/Documents/Udemy/React Native 入門 /restaurant-review-app/src/components/StarInput.jsx"],"names":["React","useState","FontAwesome","TouchableOpacity","StarInput","score","starSize","onChangeScore","starStyle","styles","star","fontSize","stars","map","starCount","toString","container","StyleSheet","create","flexDirection","alignItems","paddingVertical","paddingHorizontal","marginRight","color","scoreText","fontWeight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,WAAT,QAA4B,oBAA5B;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAAwC;AAAA,MAArCC,KAAqC,QAArCA,KAAqC;AAAA,MAA9BC,QAA8B,QAA9BA,QAA8B;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;AAC7D,MAAMC,SAAS,GAAG,CAACC,MAAM,CAACC,IAAR,EAAcJ,QAAQ,IAAI;AAAEK,IAAAA,QAAQ,EAAEL;AAAZ,GAA1B,CAAlB;AAEA,MAAMM,KAAK,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgBC,GAAhB,CAAoB,UAACC,SAAD;AAAA,WAC9B,oBAAC,gBAAD;AAAkB,MAAA,OAAO,EAAE;AAAA,eAAMP,aAAa,CAACO,SAAD,CAAnB;AAAA,OAA3B;AAA2D,MAAA,GAAG,EAAEA,SAAS,CAACC,QAAV,EAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,WAAD;AAAa,MAAA,KAAK,EAAEP,SAApB;AAA+B,MAAA,IAAI,EAAEH,KAAK,IAAIS,SAAT,GAAqB,MAArB,GAA8B,QAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAD8B;AAAA,GAApB,CAAd;AAMA,SAAO,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACO,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCJ,KAAhC,CAAP;AACH,CAVM;AAYP,IAAMH,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC7BF,EAAAA,SAAS,EAAE;AACPG,IAAAA,aAAa,EAAE,KADR;AAEPC,IAAAA,UAAU,EAAE,QAFL;AAGPC,IAAAA,eAAe,EAAE,EAHV;AAIPC,IAAAA,iBAAiB,EAAE;AAJZ,GADkB;AAO7BZ,EAAAA,IAAI,EAAE;AACFa,IAAAA,WAAW,EAAE,CADX;AAEFZ,IAAAA,QAAQ,EAAE,EAFR;AAGFa,IAAAA,KAAK,EAAE;AAHL,GAPuB;AAY7BC,EAAAA,SAAS,EAAE;AACPd,IAAAA,QAAQ,EAAE,EADH;AAEPa,IAAAA,KAAK,EAAE,MAFA;AAGPE,IAAAA,UAAU,EAAE;AAHL;AAZkB,CAAlB,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { FontAwesome } from '@expo/vector-icons';\nimport { TouchableOpacity } from 'react-native-gesture-handler';\n\nexport const StarInput = ({ score, starSize, onChangeScore }) => {\n    const starStyle = [styles.star, starSize && { fontSize: starSize }];\n\n    const stars = [1, 2, 3, 4, 5].map((starCount) => (\n        <TouchableOpacity onPress={() => onChangeScore(starCount)} key={starCount.toString()}>\n            <FontAwesome style={starStyle} name={score >= starCount ? 'star' : 'star-o'} />\n        </TouchableOpacity>\n    ));\n\n    return <View style={styles.container}>{stars}</View>;\n};\n\nconst styles = StyleSheet.create({\n    container: {\n        flexDirection: 'row',\n        alignItems: 'center',\n        paddingVertical: 16,\n        paddingHorizontal: 16,\n    },\n    star: {\n        marginRight: 8,\n        fontSize: 24,\n        color: '#900',\n    },\n    scoreText: {\n        fontSize: 14,\n        color: '#000',\n        fontWeight: 'bold',\n    },\n});\n"]},"metadata":{},"sourceType":"module"}