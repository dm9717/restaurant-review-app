{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\nimport Alert from \"react-native-web/dist/exports/Alert\";\n\nvar getCameraRollPermission = function getCameraRollPermission() {\n  var _await$ImagePicker$ge, status;\n\n  return _regeneratorRuntime.async(function getCameraRollPermission$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          if (!Constants.platform.ios) {\n            _context.next = 6;\n            break;\n          }\n\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(ImagePicker.getCameraPermissionsAsync());\n\n        case 3:\n          _await$ImagePicker$ge = _context.sent;\n          status = _await$ImagePicker$ge.status;\n\n          if (status !== 'granted') {\n            Alert('You need a permission');\n          }\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport var pickImage = function pickImage() {\n  var result;\n  return _regeneratorRuntime.async(function pickImage$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: false\n          }));\n\n        case 2:\n          result = _context2.sent;\n\n          if (result.cancelled) {\n            _context2.next = 5;\n            break;\n          }\n\n          return _context2.abrupt(\"return\", result.uri);\n\n        case 5:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/daisuke/Documents/Udemy/React Native 入門 /restaurant-review-app/src/lib/image-picker.js"],"names":["ImagePicker","Constants","getCameraRollPermission","platform","ios","getCameraPermissionsAsync","status","Alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","result","cancelled","uri"],"mappings":";AAAA,OAAO,KAAKA,WAAZ,MAA6B,mBAA7B;AACA,OAAOC,SAAP,MAAsB,gBAAtB;;;AAGA,IAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,eACxBD,SAAS,CAACE,QAAV,CAAmBC,GADK;AAAA;AAAA;AAAA;;AAAA;AAAA,2CAECJ,WAAW,CAACK,yBAAZ,EAFD;;AAAA;AAAA;AAEhBC,UAAAA,MAFgB,yBAEhBA,MAFgB;;AAGxB,cAAIA,MAAM,KAAK,SAAf,EAA0B;AACtBC,YAAAA,KAAK,CAAC,uBAAD,CAAL;AACH;;AALuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAhC;;AASA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACAR,WAAW,CAACS,uBAAZ,CAAoC;AACrDC,YAAAA,UAAU,EAAEV,WAAW,CAACW,gBAAZ,CAA6BC,MADY;AAErDC,YAAAA,aAAa,EAAE;AAFsC,WAApC,CADA;;AAAA;AACfC,UAAAA,MADe;;AAAA,cAKhBA,MAAM,CAACC,SALS;AAAA;AAAA;AAAA;;AAAA,4CAMVD,MAAM,CAACE,GANG;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAlB","sourcesContent":["import * as ImagePicker from 'expo-image-picker';\nimport Constants from 'expo-constants';\nimport { Alert } from 'react-native';\n\nconst getCameraRollPermission = async () => {\n    if (Constants.platform.ios) {\n        const { status } = await ImagePicker.getCameraPermissionsAsync();\n        if (status !== 'granted') {\n            Alert('You need a permission');\n        }\n    }\n};\n\nexport const pickImage = async () => {\n    const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n        allowsEditing: false,\n    });\n    if (!result.cancelled) {\n        return result.uri;\n    }\n};\n"]},"metadata":{},"sourceType":"module"}