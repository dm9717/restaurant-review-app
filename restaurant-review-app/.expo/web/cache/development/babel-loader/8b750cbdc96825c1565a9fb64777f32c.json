{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as firebase from 'firebase';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport Constants from 'expo-constants';\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(Constants.manifest.extra.firebase);\n}\n\nexport var getShops = function getShops() {\n  var shopDoc, shops;\n  return _regeneratorRuntime.async(function getShops$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection('shops').orderBy('score', 'desc').get());\n\n        case 2:\n          shopDoc = _context.sent;\n          shops = shopDoc.docs.map(function (doc) {\n            return _objectSpread(_objectSpread({}, doc.data()), {}, {\n              id: doc.id\n            });\n          });\n          return _context.abrupt(\"return\", shops);\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var signin = function signin() {\n  var userCredential, uid, initialUser, userDoc;\n  return _regeneratorRuntime.async(function signin$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(firebase.auth().signInAnonymously());\n\n        case 2:\n          userCredential = _context2.sent;\n          uid = userCredential.user.uid;\n          initialUser = {\n            name: '',\n            updatedAt: firebase.firestore.Timestamp.now(),\n            createdAt: firebase.firestore.Timestamp.now()\n          };\n          _context2.next = 7;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection('users').doc(uid).get());\n\n        case 7:\n          userDoc = _context2.sent;\n\n          if (userDoc.exists) {\n            _context2.next = 14;\n            break;\n          }\n\n          _context2.next = 11;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection('users').doc(uid).set(initialUser));\n\n        case 11:\n          return _context2.abrupt(\"return\", _objectSpread({\n            id: uid\n          }, initialUser));\n\n        case 14:\n          return _context2.abrupt(\"return\", _objectSpread({\n            id: uid\n          }, userDoc.data()));\n\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var updateUser = function updateUser(userId, params) {\n  return _regeneratorRuntime.async(function updateUser$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection('users').doc(userId).update(params));\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var createReviewRef = function createReviewRef(shopId) {\n  return _regeneratorRuntime.async(function createReviewRef$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection('shops').doc(shopId).collection('reviews').doc());\n\n        case 2:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 3:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var uploadImage = function uploadImage(uri, path) {\n  var localUri, blob, ref, downloadUrl;\n  return _regeneratorRuntime.async(function uploadImage$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(fetch(uri));\n\n        case 2:\n          localUri = _context5.sent;\n          _context5.next = 5;\n          return _regeneratorRuntime.awrap(localUri.blob());\n\n        case 5:\n          blob = _context5.sent;\n          ref = firebase.storage().ref().child(path);\n          downloadUrl = '';\n          _context5.prev = 8;\n          _context5.next = 11;\n          return _regeneratorRuntime.awrap(ref.put(blob));\n\n        case 11:\n          _context5.next = 13;\n          return _regeneratorRuntime.awrap(ref.getDownloadURL());\n\n        case 13:\n          downloadUrl = _context5.sent;\n          _context5.next = 19;\n          break;\n\n        case 16:\n          _context5.prev = 16;\n          _context5.t0 = _context5[\"catch\"](8);\n          console.log(_context5.t0);\n\n        case 19:\n          return _context5.abrupt(\"return\", downloadUrl);\n\n        case 20:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, [[8, 16]], Promise);\n};\nexport var getReviews = function getReviews(shopId) {\n  var reviewDocs;\n  return _regeneratorRuntime.async(function getReviews$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _regeneratorRuntime.awrap(firebase.firestore().collection('shops').doc(shopId).collection('reviews').orderBy('createdAt', 'desc').get());\n\n        case 2:\n          reviewDocs = _context6.sent;\n          return _context6.abrupt(\"return\", reviewDocs.docs.map(function (doc) {\n            return _objectSpread(_objectSpread({}, doc.data()), {}, {\n              id: doc.id\n            });\n          }));\n\n        case 4:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/daisuke/Documents/Udemy/React Native 入門 /restaurant-review-app/src/lib/firebase.js"],"names":["firebase","Constants","apps","length","initializeApp","manifest","extra","getShops","firestore","collection","orderBy","get","shopDoc","shops","docs","map","doc","data","id","signin","auth","signInAnonymously","userCredential","uid","user","initialUser","name","updatedAt","Timestamp","now","createdAt","userDoc","exists","set","updateUser","userId","params","update","createReviewRef","shopId","uploadImage","uri","path","fetch","localUri","blob","ref","storage","child","downloadUrl","put","getDownloadURL","console","log","getReviews","reviewDocs"],"mappings":"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","sourcesContent":["import * as firebase from 'firebase';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport Constants from 'expo-constants';\n\n// Initialize Firebase if it has not been initialized yet.\nif (!firebase.apps.length) {\n    // Initialize Firebase\n    firebase.initializeApp(Constants.manifest.extra.firebase);\n}\n\nexport const getShops = async () => {\n    const shopDoc = await firebase\n        .firestore()\n        .collection('shops')\n        // .where('score', '>', 3)\n        .orderBy('score', 'desc')\n        .get();\n    const shops = shopDoc.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\n    return shops;\n};\n\nexport const signin = async () => {\n    const userCredential = await firebase.auth().signInAnonymously();\n    const { uid } = userCredential.user;\n    const initialUser = {\n        name: '',\n        updatedAt: firebase.firestore.Timestamp.now(),\n        createdAt: firebase.firestore.Timestamp.now(),\n    };\n    const userDoc = await firebase.firestore().collection('users').doc(uid).get();\n    if (!userDoc.exists) {\n        await firebase.firestore().collection('users').doc(uid).set(initialUser);\n        return {\n            id: uid,\n            ...initialUser,\n        };\n    } else {\n        return {\n            id: uid,\n            ...userDoc.data(),\n        };\n    }\n};\n\nexport const updateUser = async (userId, params) => {\n    await firebase.firestore().collection('users').doc(userId).update(params);\n};\n\nexport const createReviewRef = async (shopId) => {\n    return await firebase.firestore().collection('shops').doc(shopId).collection('reviews').doc();\n};\n\nexport const uploadImage = async (uri, path) => {\n    // Turn an URI into a Blob\n    const localUri = await fetch(uri);\n    const blob = await localUri.blob();\n    // Upload the image to Cloud Storage\n    const ref = firebase.storage().ref().child(path);\n\n    let downloadUrl = '';\n    try {\n        await ref.put(blob);\n        downloadUrl = await ref.getDownloadURL();\n    } catch (err) {\n        console.log(err);\n    }\n    return downloadUrl;\n};\n\nexport const getReviews = async (shopId) => {\n    const reviewDocs = await firebase\n        .firestore()\n        .collection('shops')\n        .doc(shopId)\n        .collection('reviews')\n        .orderBy('createdAt', 'desc')\n        .get();\n    return reviewDocs.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\n};\n"]},"metadata":{},"sourceType":"module"}